/*
 * Copyright (C) 2015 Freescale Semiconductor, Inc.
 *
 * This file is dual-licensed: you can use it either under the terms
 * of the GPL or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 *  a) This file is free software; you can redistribute it and/or
 *     modify it under the terms of the GNU General Public License as
 *     published by the Free Software Foundation; either version 2 of the
 *     License, or (at your option) any later version.
 *
 *     This file is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 * Or, alternatively,
 *
 *  b) Permission is hereby granted, free of charge, to any person
 *     obtaining a copy of this software and associated documentation
 *     files (the "Software"), to deal in the Software without
 *     restriction, including without limitation the rights to use,
 *     copy, modify, merge, publish, distribute, sublicense, and/or
 *     sell copies of the Software, and to permit persons to whom the
 *     Software is furnished to do so, subject to the following
 *     conditions:
 *
 *     The above copyright notice and this permission notice shall be
 *     included in all copies or substantial portions of the Software.
 *
 *     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *     OTHER DEALINGS IN THE SOFTWARE.
 */

/dts-v1/;

#include <dt-bindings/input/input.h>
#include "imx7d.dtsi"

/ {
	model = "Freescale i.MX7 SabreSD Board";
	compatible = "fsl,imx7d-sdb", "fsl,imx7d";

	memory {
		reg = <0x80000000 0x80000000>;
	};

	regulators {
		compatible = "simple-bus";
		#address-cells = <1>;
		#size-cells = <0>;

		reg_usb_otg1_vbus: regulator@0 {
			compatible = "regulator-fixed";
			reg = <0>;
			regulator-name = "usb_otg1_vbus";
			regulator-min-microvolt = <5000000>;
			regulator-max-microvolt = <5000000>;
			gpio = <&gpio1 5 GPIO_ACTIVE_HIGH>;
			enable-active-high;
		};

		reg_usb_otg2_vbus: regulator@1 {
			compatible = "regulator-fixed";
			reg = <1>;
			regulator-name = "usb_otg2_vbus";
			regulator-min-microvolt = <5000000>;
			regulator-max-microvolt = <5000000>;
			gpio = <&gpio4 7 GPIO_ACTIVE_HIGH>;
			enable-active-high;
		};

		reg_can2_3v3: regulator@2 {
			compatible = "regulator-fixed";
			reg = <2>;
			regulator-name = "can2-3v3";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			gpio = <&gpio1 7 GPIO_ACTIVE_LOW>;
		};

		reg_vref_1v8: regulator@3 {
			compatible = "regulator-fixed";
			reg = <3>;
			regulator-name = "vref-1v8";
			regulator-min-microvolt = <1800000>;
			regulator-max-microvolt = <1800000>;
		};
	};
};

&cpu0 {
	arm-supply = <&sw1a_reg>;
};
/*
&fec1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_enet1>;
	assigned-clocks = <&clks IMX7D_ENET1_TIME_ROOT_SRC>,
			  <&clks IMX7D_ENET1_TIME_ROOT_CLK>;
	assigned-clock-parents = <&clks IMX7D_PLL_ENET_MAIN_100M_CLK>;
	assigned-clock-rates = <0>, <100000000>;
	phy-mode = "rgmii";
	phy-handle = <&ethphy0>;
	fsl,magic-packet;
	status = "okay";

	mdio {
		#address-cells = <1>;
		#size-cells = <0>;

		ethphy0: ethernet-phy@0 {
			reg = <0>;
		};

		ethphy1: ethernet-phy@1 {
			reg = <1>;
		};
	};
};
*/

&fec1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_enet1>;

	clocks = <&clks IMX7D_ENET_AXI_ROOT_CLK>,
		<&clks IMX7D_ENET_AXI_ROOT_CLK>,
		<&clks IMX7D_ENET1_TIME_ROOT_CLK>,
		<&clks IMX7D_PLL_ENET_MAIN_50M_CLK>;
	clock-names = "ipg", "ahb", "ptp",
		"enet_clk_ref";

	assigned-clocks = <&clks IMX7D_ENET1_TIME_ROOT_SRC>,
			<&clks IMX7D_ENET1_TIME_ROOT_CLK>;
	assigned-clock-parents = <&clks IMX7D_PLL_ENET_MAIN_100M_CLK>;
	assigned-clock-rates = <0>, <100000000>;
	phy-mode = "rmii";
	phy-reset-gpios = <&gpio1 2 GPIO_ACTIVE_HIGH>;
	local-mac-address = [00 04 9F 01 1B B9];
	fsl,magic-packet;
	status = "okay";
	label = "fec";

	fixed-link {
	      speed = <100>;
	      full-duplex;
	};
	mii_bus0: mdio {
		#address-cells = <1>;
		#size-cells = <0>;
	};
};

&fec2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_enet2>;

	clocks = <&clks IMX7D_ENET_AXI_ROOT_CLK>,
		<&clks IMX7D_ENET_AXI_ROOT_CLK>,
		<&clks IMX7D_ENET2_TIME_ROOT_CLK>,
		<&clks IMX7D_PLL_ENET_MAIN_50M_CLK>;
	clock-names = "ipg", "ahb", "ptp",
		"enet_clk_ref";

	assigned-clocks = <&clks IMX7D_ENET2_TIME_ROOT_SRC>,
			<&clks IMX7D_ENET2_TIME_ROOT_CLK>;
	assigned-clock-parents = <&clks IMX7D_PLL_ENET_MAIN_100M_CLK>;
	assigned-clock-rates = <0>, <100000000>;
	phy-mode = "rmii";
	local-mac-address = [00 04 9F 01 1B B8];
	fsl,magic-packet;
	status = "okay";

	fixed-link {
	      speed = <100>;
	      full-duplex;
	};
};

&ecspi3 {
	fsl,spi-num-chipselects = <2>;
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_ecspi3>;
        cs-gpios = <&gpio6 22 GPIO_ACTIVE_LOW> , <&gpio5 10 GPIO_ACTIVE_LOW>;
        status = "okay";

        mram@0 {
                compatible = "everspin,mr25h40","mr25h40";
                #address-cells = <1>;
                #size-cells = <1>;
                spi-max-frequency = <40000000>;
                spi-cpol = <0>;
                spi-cpha = <0>;
                reg = <0>;
        };


        tpm@1 {

                compatible = "infineon,slb9670";
                #address-cells = <1>;
                #size-cells = <1>;
                spi-max-frequency = <10000000>;
                spi-cpol = <0>;
                spi-cpha = <0>;
                reg = <1>;
        };

};

&i2c1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c1>;
	status = "okay";

	pmic: pfuze3000@08 {
		compatible = "fsl,pfuze3000";
		reg = <0x08>;

		regulators {
			sw1a_reg: sw1a {
				regulator-min-microvolt = <700000>;
				regulator-max-microvolt = <1475000>;
				regulator-boot-on;
				regulator-always-on;
				regulator-ramp-delay = <6250>;
			};

			/* use sw1c_reg to align with pfuze100/pfuze200 */
			sw1c_reg: sw1b {
				regulator-min-microvolt = <700000>;
				regulator-max-microvolt = <1475000>;
				regulator-boot-on;
				regulator-always-on;
				regulator-ramp-delay = <6250>;
			};

			sw2_reg: sw2 {
				regulator-min-microvolt = <1500000>;
				regulator-max-microvolt = <1850000>;
				regulator-boot-on;
				regulator-always-on;
			};

			sw3a_reg: sw3 {
				regulator-min-microvolt = <900000>;
				regulator-max-microvolt = <1650000>;
				regulator-boot-on;
				regulator-always-on;
			};

			swbst_reg: swbst {
				regulator-min-microvolt = <5000000>;
				regulator-max-microvolt = <5150000>;
			};

			snvs_reg: vsnvs {
				regulator-min-microvolt = <1000000>;
				regulator-max-microvolt = <3000000>;
				regulator-boot-on;
				regulator-always-on;
			};

			vref_reg: vrefddr {
				regulator-boot-on;
				regulator-always-on;
			};

			vgen1_reg: vldo1 {
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};

			vgen2_reg: vldo2 {
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <1550000>;
			};

			vgen3_reg: vccsd {
				regulator-min-microvolt = <2850000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};

			vgen4_reg: v33 {
				regulator-min-microvolt = <2850000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};

			vgen5_reg: vldo3 {
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};

			vgen6_reg: vldo4 {
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};
		};
	};
};

&i2c2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c2>;
	status = "okay";

	rtc@32 {
                compatible = "epson,rx8130";
                reg = <0x32>;
        };

};

&uart1 {//Debug
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart1>;
	assigned-clocks = <&clks IMX7D_UART1_ROOT_SRC>;
	assigned-clock-parents = <&clks IMX7D_PLL_SYS_MAIN_240M_CLK>;
	status = "okay";
};
/*
&uart2 {//MR
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart2>;
	assigned-clocks = <&clks IMX7D_UART2_ROOT_SRC>;
	assigned-clock-parents = <&clks IMX7D_PLL_SYS_MAIN_240M_CLK>;
	status = "okay";
};
*/

&uart3 {//ML
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart3>;
	assigned-clocks = <&clks IMX7D_UART3_ROOT_SRC>;
	assigned-clock-parents = <&clks IMX7D_PLL_SYS_MAIN_240M_CLK>;
	status = "okay";
};

&uart5 {//serial port 2
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart5>;
	assigned-clocks = <&clks IMX7D_UART5_ROOT_SRC>;
	assigned-clock-parents = <&clks IMX7D_PLL_SYS_MAIN_240M_CLK>;
	status = "okay";

	out1-gpios = <&gpio2 18 GPIO_ACTIVE_HIGH>; //P1_232_EN
	out2-gpios = <&gpio2 19 GPIO_ACTIVE_HIGH>; //P1_485_EN0
	out3-gpios = <&gpio2 24 GPIO_ACTIVE_HIGH>; //P1_485_EN1
	out4-gpios = <&gpio2 25 GPIO_ACTIVE_HIGH>; //P1_485_EN2
	out5-gpios = <&gpio2 27 GPIO_ACTIVE_HIGH>; //P2_485_EN0
	out6-gpios = <&gpio2 30 GPIO_ACTIVE_HIGH>; //P2_485_EN1
	fsl,uart-has-rtscts;

	fsl,uart-has-multimode;
	fsl,rs485-p2;

};

&uart6 {//serial port 1
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart6>;
	assigned-clocks = <&clks IMX7D_UART6_ROOT_SRC>;
	assigned-clock-parents = <&clks IMX7D_PLL_SYS_MAIN_240M_CLK>;
	status = "okay";

	out1-gpios = <&gpio2 18 GPIO_ACTIVE_HIGH>; //P1_232_EN
	out2-gpios = <&gpio2 19 GPIO_ACTIVE_HIGH>; //P1_485_EN0
	out3-gpios = <&gpio2 24 GPIO_ACTIVE_HIGH>; //P1_485_EN1
	out4-gpios = <&gpio2 25 GPIO_ACTIVE_HIGH>; //P1_485_EN2
	out5-gpios = <&gpio2 27 GPIO_ACTIVE_HIGH>; //P2_485_EN0
	out6-gpios = <&gpio2 30 GPIO_ACTIVE_HIGH>; //P2_485_EN1
	fsl,uart-has-rtscts;

	fsl,uart-has-multimode;
	fsl,rs485-p1;
};

&uart7 {//824 RX/TX
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart7>;
	assigned-clocks = <&clks IMX7D_UART7_ROOT_SRC>;
	assigned-clock-parents = <&clks IMX7D_PLL_SYS_MAIN_240M_CLK>;
	status = "okay";
};

&usbotg1 {
	vbus-supply = <&reg_usb_otg1_vbus>;
	status = "okay";
};

&usbotg2 {
	vbus-supply = <&reg_usb_otg2_vbus>;
	dr_mode = "host";
	status = "okay";
};

&usdhc1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usdhc1>;
	cd-gpios = <&gpio5 0 GPIO_ACTIVE_LOW>;
	wp-gpios = <&gpio5 1 GPIO_ACTIVE_HIGH>;
	enable-sdio-wakeup;
	keep-power-in-suspend;
	status = "okay";
};

&usdhc3 {
	pinctrl-names = "default", "state_100mhz", "state_200mhz";
	pinctrl-0 = <&pinctrl_usdhc3>;
	pinctrl-1 = <&pinctrl_usdhc3_100mhz>;
	pinctrl-2 = <&pinctrl_usdhc3_200mhz>;
	assigned-clocks = <&clks IMX7D_USDHC3_ROOT_CLK>;
	assigned-clock-rates = <400000000>;
	bus-width = <8>;
	fsl,tuning-step = <2>;
	non-removable;
	status = "okay";
};
&wdog1 {
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_wdog>;
        fsl,ext-reset-output;
};

&gpio2 {
	line_hold_cs1 {
                gpio-hog;
                gpios = <31 GPIO_ACTIVE_HIGH>;
                output-high;
                line-name = "hold-cs1";
        };
};


/ {
	m4_tcm: tcml@007f8000 {
		compatible = "fsl, m4_tcml";
		reg = <0x007f8000 0x8000>;
	};

	leds {
		compatible = "gpio-leds";
		pinctrl-0 = <&pinctrl_leds>;

		led_fault {
                        label = "ioThinx4530:red:fault";
                        gpios = <&gpio1 9 GPIO_ACTIVE_LOW>;
                        default-state = "on";
		};

		led_rdy {
                        label = "ioThinx4530:green:rdy";
                        gpios = <&gpio1 12 GPIO_ACTIVE_LOW>;
                        default-state = "on";
		};
		sd_led {
                        label = "sd_led";
                        gpios = <&gpio1 13 GPIO_ACTIVE_LOW>;
                        default-state = "on";
		};

		usr1_g_led {
                        label = "usr1_g_led";
                        gpios = <&gpio2 8 GPIO_ACTIVE_LOW>;
                        default-state = "on";
		};
		usr1_r_led {
                        label = "usr1_r_led";
                        gpios = <&gpio2 9 GPIO_ACTIVE_LOW>;
                        default-state = "on";
		};
		usr2_g_led {
                        label = "usr2_g_led";
                        gpios = <&gpio2 10 GPIO_ACTIVE_LOW>;
                        default-state = "on";
		};
		usr2_r_led {
                        label = "usr2_r_led";
                        gpios = <&gpio2 11 GPIO_ACTIVE_LOW>;
                        default-state = "on";
		};
	};

        gpio-decoder0 {
                compatible = "gpio-decoder";
                gpios = <&gpio2 15 GPIO_ACTIVE_LOW>,
                        <&gpio2 14 GPIO_ACTIVE_LOW>,
                        <&gpio2 13 GPIO_ACTIVE_LOW>,
                        <&gpio2 12 GPIO_ACTIVE_LOW>;
                linux,axis = <0>; /* ABS_X */
                decoder-max-value = <16>;
        };

	watchdog: watchdog {
                compatible = "linux,wdt-gpio";
                gpios = <&gpio1 0 GPIO_ACTIVE_LOW>;
                hw_algo = "toggle";
                hw_margin_ms = <1000>;
                always-running;
        };


        all_gpio {
                status = "okay";
                pinctrl-names = "default";
                pinctrl-0 = <&pinctrl_gpios> ,
			<&pinctrl_rortartswitch> ,
			<&pinctrl_mr_gpio>,
			<&pinctrl_ml_gpio>,
			<&pinctrl_serial3in1_gpio>;
        };
};

&iomuxc {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_hog>;

	imx7d-sdb {
		 pinctrl_ecspi3: ecspi3grp {
                        fsl,pins = <
                                MX7D_PAD_SAI2_TX_SYNC__ECSPI3_MISO      0x14
                                MX7D_PAD_SAI2_TX_BCLK__ECSPI3_MOSI      0x14
                                MX7D_PAD_SAI2_RX_DATA__ECSPI3_SCLK      0x14
				MX7D_PAD_SAI2_TX_DATA__GPIO6_IO22	0x00000014
				MX7D_PAD_SD2_WP__GPIO5_IO10		0x00000014
                        >;
                };


		pinctrl_enet1: enet1grp {
			fsl,pins = <
				MX7D_PAD_ENET1_RGMII_RD0__ENET1_RGMII_RD0	0x00000014
				MX7D_PAD_ENET1_RGMII_RD1__ENET1_RGMII_RD1	0x00000014
				MX7D_PAD_ENET1_RGMII_RXC__ENET1_RGMII_RXC	0x00000014
				MX7D_PAD_ENET1_RGMII_RX_CTL__ENET1_RGMII_RX_CTL	0x00000014
				MX7D_PAD_ENET1_RGMII_TD0__ENET1_RGMII_TD0	0x00000014
				MX7D_PAD_ENET1_RGMII_TD1__ENET1_RGMII_TD1	0x00000014
				/*MX7D_PAD_ENET1_RGMII_TXC__ENET1_RGMII_TXC  0x00000014*/
				MX7D_PAD_ENET1_RGMII_TX_CTL__ENET1_RGMII_TX_CTL	0x00000014
				MX7D_PAD_ENET1_TX_CLK__CCM_ENET_REF_CLK1	0x40000001

				MX7D_PAD_GPIO1_IO10__ENET1_MDIO			0x3
				MX7D_PAD_GPIO1_IO11__ENET1_MDC			0x3
			>;
		};

		pinctrl_enet2: enet2grp {
			fsl,pins = <
				MX7D_PAD_EPDC_BDR0__CCM_ENET_REF_CLK2	0x40000001
				MX7D_PAD_EPDC_GDRL__ENET2_RGMII_TX_CTL	0x00000001
				MX7D_PAD_EPDC_SDCE0__ENET2_RGMII_RX_CTL	0x00000001
				MX7D_PAD_EPDC_SDCE1__ENET2_RX_ER	0x00000001
				MX7D_PAD_EPDC_SDCE2__ENET2_RGMII_TD0	0x00000001
				MX7D_PAD_EPDC_SDCE3__ENET2_RGMII_TD1	0x00000001
				MX7D_PAD_EPDC_SDCLK__ENET2_RGMII_RD0	0x00000001
				MX7D_PAD_EPDC_SDLE__ENET2_RGMII_RD1	0x00000001
			>;
		};

		pinctrl_hog: hoggrp {
			fsl,pins = <
				MX7D_PAD_UART3_CTS_B__GPIO4_IO7		0x14
				MX7D_PAD_ECSPI2_SS0__GPIO4_IO23		0x34  /* bt reg on */
			>;
		};

		pinctrl_i2c1: i2c1grp {
			fsl,pins = <
				MX7D_PAD_I2C1_SDA__I2C1_SDA		0x4000007f
				MX7D_PAD_I2C1_SCL__I2C1_SCL		0x4000007f
			>;
		};

		pinctrl_i2c2: i2c2grp {
			fsl,pins = <
				MX7D_PAD_I2C2_SDA__I2C2_SDA		0x4000007f
				MX7D_PAD_I2C2_SCL__I2C2_SCL		0x4000007f
			>;
		};

		pinctrl_i2c3: i2c3grp {
			fsl,pins = <
				MX7D_PAD_I2C3_SDA__I2C3_SDA		0x4000007f
				MX7D_PAD_I2C3_SCL__I2C3_SCL		0x4000007f
			>;
		};

		pinctrl_i2c4: i2c4grp {
			fsl,pins = <
				MX7D_PAD_SAI1_RX_BCLK__I2C4_SDA		0x4000007f
				MX7D_PAD_SAI1_RX_SYNC__I2C4_SCL		0x4000007f
			>;
		};

		pinctrl_uart1: uart1grp {
			fsl,pins = <
				MX7D_PAD_UART1_TX_DATA__UART1_DCE_TX	0x79
				MX7D_PAD_UART1_RX_DATA__UART1_DCE_RX	0x79
			>;
		};

		pinctrl_uart2: uart2grp {
			fsl,pins = <
				MX7D_PAD_UART2_TX_DATA__UART2_DCE_TX	0x79
				MX7D_PAD_UART2_RX_DATA__UART2_DCE_RX 	0x79
			>;
		};

		pinctrl_uart3: uart3grp {
			fsl,pins = <
				MX7D_PAD_UART3_CTS_B__UART3_DTE_RTS	0x79
				MX7D_PAD_UART3_RTS_B__UART3_DCE_RTS	0x79
				MX7D_PAD_UART3_RX_DATA__UART3_DCE_RX	0x79
				MX7D_PAD_UART3_TX_DATA__UART3_DCE_TX	0x79
			>;
		};

		pinctrl_uart5: uart5grp {
			fsl,pins = <
				MX7D_PAD_I2C4_SCL__UART5_DCE_RX		0x79
				MX7D_PAD_I2C4_SDA__UART5_DCE_TX		0x79
			>;
		};

		pinctrl_uart6: uart6grp {
			fsl,pins = <
				MX7D_PAD_ECSPI1_MOSI__UART6_DCE_TX	0x79
				MX7D_PAD_ECSPI1_SCLK__UART6_DCE_RX	0x79
				MX7D_PAD_ECSPI1_SS0__UART6_DCE_CTS	0x79
				MX7D_PAD_ECSPI1_MISO__UART6_DCE_RTS	0x79
			>;
		};

		pinctrl_uart7: uart7grp {
			fsl,pins = <
				MX7D_PAD_ECSPI2_MOSI__UART7_DTE_RX	0x79
				MX7D_PAD_ECSPI2_SCLK__UART7_DTE_TX	0x79
			>;
		};

		pinctrl_usdhc1: usdhc1grp {
			fsl,pins = <
				MX7D_PAD_SD1_CMD__SD1_CMD		0x59
				MX7D_PAD_SD1_CLK__SD1_CLK		0x19
				MX7D_PAD_SD1_DATA0__SD1_DATA0		0x59
				MX7D_PAD_SD1_DATA1__SD1_DATA1		0x59
				MX7D_PAD_SD1_DATA2__SD1_DATA2		0x59
				MX7D_PAD_SD1_DATA3__SD1_DATA3		0x59
				MX7D_PAD_SD1_CD_B__GPIO5_IO0		0x59 /* CD */
				MX7D_PAD_SD1_WP__GPIO5_IO1		0x59 /* WP */
				MX7D_PAD_SD1_RESET_B__GPIO5_IO2		0x59 /* vmmc */
			>;
		};

		pinctrl_usdhc3: usdhc3grp {
			fsl,pins = <
				MX7D_PAD_SD3_CMD__SD3_CMD		0x59
				MX7D_PAD_SD3_CLK__SD3_CLK		0x19
				MX7D_PAD_SD3_DATA0__SD3_DATA0		0x59
				MX7D_PAD_SD3_DATA1__SD3_DATA1		0x59
				MX7D_PAD_SD3_DATA2__SD3_DATA2		0x59
				MX7D_PAD_SD3_DATA3__SD3_DATA3		0x59
				MX7D_PAD_SD3_DATA4__SD3_DATA4		0x59
				MX7D_PAD_SD3_DATA5__SD3_DATA5		0x59
				MX7D_PAD_SD3_DATA6__SD3_DATA6		0x59
				MX7D_PAD_SD3_DATA7__SD3_DATA7		0x59
				MX7D_PAD_SD3_RESET_B__SD3_RESET_B	0x14
				MX7D_PAD_SD3_STROBE__SD3_STROBE		0x19
			>;
		};

		pinctrl_usdhc3_100mhz: usdhc3grp_100mhz {
			fsl,pins = <
				MX7D_PAD_SD3_CMD__SD3_CMD		0x5a
				MX7D_PAD_SD3_CLK__SD3_CLK		0x1a
				MX7D_PAD_SD3_DATA0__SD3_DATA0		0x5a
				MX7D_PAD_SD3_DATA1__SD3_DATA1		0x5a
				MX7D_PAD_SD3_DATA2__SD3_DATA2		0x5a
				MX7D_PAD_SD3_DATA3__SD3_DATA3		0x5a
				MX7D_PAD_SD3_DATA4__SD3_DATA4		0x5a
				MX7D_PAD_SD3_DATA5__SD3_DATA5		0x5a
				MX7D_PAD_SD3_DATA6__SD3_DATA6		0x5a
				MX7D_PAD_SD3_DATA7__SD3_DATA7		0x5a
				MX7D_PAD_SD3_RESET_B__SD3_RESET_B	0x14
				MX7D_PAD_SD3_STROBE__SD3_STROBE		0x1a
			>;
		};

		pinctrl_usdhc3_200mhz: usdhc3grp_200mhz {
			fsl,pins = <
				MX7D_PAD_SD3_CMD__SD3_CMD		0x5b
				MX7D_PAD_SD3_CLK__SD3_CLK		0x1b
				MX7D_PAD_SD3_DATA0__SD3_DATA0		0x5b
				MX7D_PAD_SD3_DATA1__SD3_DATA1		0x5b
				MX7D_PAD_SD3_DATA2__SD3_DATA2		0x5b
				MX7D_PAD_SD3_DATA3__SD3_DATA3		0x5b
				MX7D_PAD_SD3_DATA4__SD3_DATA4		0x5b
				MX7D_PAD_SD3_DATA5__SD3_DATA5		0x5b
				MX7D_PAD_SD3_DATA6__SD3_DATA6		0x5b
				MX7D_PAD_SD3_DATA7__SD3_DATA7		0x5b
				MX7D_PAD_SD3_RESET_B__SD3_RESET_B	0x14
				MX7D_PAD_SD3_STROBE__SD3_STROBE		0x1b
			>;
		};
		pinctrl_leds: leds_grp {
			fsl,pins = <
				MX7D_PAD_GPIO1_IO09__GPIO1_IO9             0x00000014
				MX7D_PAD_GPIO1_IO12__GPIO1_IO12            0x00000014
				MX7D_PAD_GPIO1_IO13__GPIO1_IO13            0x00000014

				MX7D_PAD_EPDC_DATA08__GPIO2_IO8            0x00000014
				MX7D_PAD_EPDC_DATA09__GPIO2_IO9            0x00000014
				MX7D_PAD_EPDC_DATA10__GPIO2_IO10           0x00000014
				MX7D_PAD_EPDC_DATA11__GPIO2_IO11           0x00000014

				MX7D_PAD_GPIO1_IO00__GPIO1_IO0             0x00000059
			>;
		};

		pinctrl_gpios: gpios_grp {
                        fsl,pins = <
				MX7D_PAD_EPDC_PWR_STAT__GPIO2_IO31         0x00000014	/*HOLD_CS1*/
                        >;
                };

		pinctrl_rortartswitch: rortartswitch {
			fsl,pins = <
				MX7D_PAD_EPDC_DATA12__GPIO2_IO12           0x00000014	/*rortart switch bit 0 */
				MX7D_PAD_EPDC_DATA13__GPIO2_IO13           0x00000014	/*rortart switch bit 1 */
				MX7D_PAD_EPDC_DATA14__GPIO2_IO14           0x00000014	/*rortart switch bit 2 */
				MX7D_PAD_EPDC_DATA15__GPIO2_IO15           0x00000014	/*rortart switch bit 3 */
			>;
		};

		pinctrl_mr_gpio: mrgpio {
			fsl,pins = <
				MX7D_PAD_SD2_DATA0__GPIO5_IO14             0x00000014	/*R_SYNC*/
				MX7D_PAD_SD2_DATA1__GPIO5_IO15             0x00000014	/*R_POWER_FAIL*/
				MX7D_PAD_SD2_DATA2__GPIO5_IO16             0x00000014	/*R_RST*/
				MX7D_PAD_SD2_DATA3__GPIO5_IO17             0x00000014	/*R_ID*/
			>;
		};

		pinctrl_ml_gpio: mlgpio {
			fsl,pins = <
				MX7D_PAD_ENET1_RGMII_TD2__GPIO7_IO8        0x00000014	/*L_ID_OUT*/
				MX7D_PAD_ENET1_RGMII_TD3__GPIO7_IO9        0x00000014	/*L_SYNC_OUT*/
				MX7D_PAD_ENET1_RGMII_RD2__GPIO7_IO2        0x00000014	/*L_RST_OUT*/
				MX7D_PAD_ENET1_RGMII_RD3__GPIO7_IO3        0x00000014	/*L_POWER_FAIL_OU*/
				MX7D_PAD_ENET1_RGMII_TXC__GPIO7_IO11       0x00000014	/*L_INT_OUT*/
			>;
		};
		pinctrl_serial3in1_gpio: serial3in1_gpio {
			fsl,pins = <
				MX7D_PAD_EPDC_SDOE__GPIO2_IO18             0x00000014	/*P1_232_EN*/
				MX7D_PAD_EPDC_SDSHR__GPIO2_IO19            0x00000014	/*P1_485_EN0*/
				MX7D_PAD_EPDC_GDCLK__GPIO2_IO24            0x00000014	/*P1_485_EN1*/
				MX7D_PAD_EPDC_GDOE__GPIO2_IO25             0x00000014	/*P1_485_EN2*/
				MX7D_PAD_EPDC_GDSP__GPIO2_IO27             0x00000014	/*P2_485_EN0*/
				MX7D_PAD_EPDC_PWR_COM__GPIO2_IO30          0x00000014	/*P2_485_EN1*/
			>;
		};

	};
};

&iomuxc_lpsr {
        pinctrl_wdog: wdoggrp {
                fsl,pins = <
                        MX7D_PAD_GPIO1_IO00__GPIO1_IO0             0x14
                >;
        };
};
